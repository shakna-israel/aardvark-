build() {
  build=$(mktemp -d)
  echo "Building to $build"
  compile "$1" "$3" "$build/out"
  flash "$1" "$2" "$build/out"
  rm -rf "$build"
}

mkheader() {
  if [ -d "$1" ]; then
    cp "$root/.header" "$1"/core.h
  else
    echo 'Could not write header file. Temporary directory does not exist.' >&2
    echo 'This is probably a problem with Aardvark.' >&2
    exit 1
  fi
}

compile() {

  #TODO: Needs to compile in a tmp directory
  # So mkheader can work
  # and we don't risk overwriting user files

  model=$(getmodel "$1")
  if [ -z "$model" ]; then
    echo "Could not find model: $2" >&2
    # shellcheck disable=SC2016
    echo 'Confirm it can be found in `aardvark list`' >&2
    exit 1
  fi

  avrgcc=$(getgcc)
  if [ -z "$avrgcc" ]; then
    echo 'Could not find avr-gcc.' >&2
    echo 'Is it installed?' >&2
    exit 1
  fi

  objcopy=$(getobjcopy)
  if [ -z "$objcopy" ]; then
    echo 'Could not find avr-objcopy.' >&2
    echo 'Is it installed?' >&2
    exit 1
  fi

  if [ -f "$2" ]; then
    data=$(cat "$2")
    if [ -z "$data" ]; then
      echo "Read no data from file: $2" >&2
      echo 'File needs at least some data.' >&2
      exit 1
    fi
  else
    echo "Could not access project file: $2" >&2
    echo 'Do you have permission?' >&2
    echo 'Does it exist?' >&2
    exit 1
  fi

  if [ -z "$3" ]; then
    echo 'No outfile named.' >&2
    echo 'Please provide one.' >&2
    exit 1
  fi

  #getmaxsize
  maxsize=$(getmaxsize "$1")

  #getaxdatasize
  datasize=$(getmaxdatasize "$1")

  #getchip
  chip=$(getchip "$1")

  #getbaud
  baud=$(getbaud "$1")

  #use $avrgcc
  echo "$avrgcc -c -std=gnu99 -Os -Wall -ffunction-sections -fdata-sections -mmcu=$chip -DF_CPU=16000000UL -DBAUD=$baud $2 -o $3.bin"
  "$avrgcc" -c -std=gnu99 -Os -Wall -ffunction-sections -fdata-sections -mmcu="$chip" -DF_CPU=16000000UL -DBAUD="$baud" "$2" -o "$3".bin

  echo "$avrgcc -Os -mmcu=$chip -ffunction-sections -fdata-sections -Wl,--gc-sections $3.bin -o $3.elf"
  "$avrgcc" -Os -mmcu="$chip" -ffunction-sections -fdata-sections -Wl,--gc-sections "$3".bin -o "$3".elf

  # use $objcopy
  echo "$objcopy -O ihex -R .eeprom -g $3.elf $3.ihex"
  "$objcopy" -O ihex -R .eeprom -g "$3".elf "$3".ihex

  rm "$3".bin
  rm "$3".elf
  echo 'Compiled successfully.'
  ls -lah "$3".ihex
}

flash() {
  ad=$(getdude)
  if [ -z "$ad" ]; then
    echo 'Could not find avrdude.' >&2
    echo 'Is it installed?' >&2
    exit 1
  fi

  model=$(getmodel "$1")
  if [ -z "$model" ]; then
    echo "Could not find model: $2" >&2
    # shellcheck disable=SC2016
    echo 'Confirm it can be found in `aardvark list`' >&2
    exit 1
  fi

  chip=$(getchip "$1")
  baud=$(getbaud "$1")

 #$2 = port
  if [ -e /dev/"$2" ]; then
    echo "Could not access port: /dev/$2" >&2
    echo 'Does it exist?' >&2
    exit 1
  fi

 #$3 = hexfile
  if [ -f "$3".ihex ]; then
    :
  else
    echo "Could not find hexfile: $3.ihex" >&2
    echo 'Does it exist?' >&2
    echo 'Do you have permission to access it?' >&2
    exit 1
  fi
  
  echo "$ad -v -p $chip -c arduino -P /dev/$2 -b $baud -D -U flash:w:$3.ihex:i"
  "$ad" -v -p "$chip" -c arduino -P /dev/"$2" -b "$baud" -D -U flash:w:"$3".ihex:i
  echo 'Flashed successfully.'
}
